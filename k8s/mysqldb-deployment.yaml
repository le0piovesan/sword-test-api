apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o k8s/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o k8s/
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/sword-test-api-sword: "true"
        io.kompose.service: mysqldb
    spec:
      containers:
        - args:
            - --default-authentication-plugin=mysql_native_password
          env:
            - name: MYSQL_DATABASE
              value: tasksdb
            - name: MYSQL_PASSWORD
              value: root
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: admin
            - name: SERVICE_NAME
              value: mysqldb
            - name: SERVICE_TAGS
              value: dev
          image: mysql:8.0
          name: mysql-container
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/0_init.sql
              name: mysqldb-claim0
            - mountPath: /var/lib/mysql
              name: mysqldb-claim1
      restartPolicy: Always
      volumes:
        - name: mysqldb-claim0
          persistentVolumeClaim:
            claimName: mysqldb-claim0
        - name: mysqldb-claim1
          persistentVolumeClaim:
            claimName: mysqldb-claim1
status: {}
